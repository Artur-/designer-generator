package org.vaadin.artur.designer.generator;

import java.io.File;
import java.io.IOException;
import java.util.Iterator;

import org.jboss.forge.roaster.Roaster;
import org.jboss.forge.roaster.model.source.JavaClassSource;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.jsoup.select.Selector;

import com.vaadin.shared.util.SharedUtil;

public class GenerateJava {
    public static void main(String[] args) throws IOException {
        String htmlFile = args[0];

        // TODO out package and class from HTML location
        String outPackage = "org.vaadin.artur.generated";
        String outClass = "MyDesign";
        // TODO write output
        // String outFile = outClass + ".java";

        Document design = Jsoup.parse(new File(htmlFile), "UTF-8");
        Elements idElements = Selector.select("[_id]", design.body());
        String superClass = tagToClass(design.body().child(0).tagName());

        final JavaClassSource javaClass = Roaster.create(JavaClassSource.class);
        javaClass.setPackage(outPackage).setName(outClass);
        javaClass.setSuperType(superClass);
        javaClass.addAnnotation("com.vaadin.annotations.DesignRoot");
        javaClass.addAnnotation("com.vaadin.annotations.AutoGenerated");
        // @SuppressWarnings("serial")

        Iterator<Element> i = idElements.iterator();
        while (i.hasNext()) {

            Element idElement = i.next();
            String tag = idElement.tagName();
            String type = tagToClass(tag);
            if (type != null) {
                javaClass.addField().setName(idElement.attr("_id"))
                        .setType(type).setProtected();
            }

        }
        javaClass.getJavaDoc().setFullText("!! DO NOT EDIT THIS FILE !!\n"
                + "\n"
                + "This class is generated by Vaadin Designer and will be overwritten.\n"
                + "\n"
                + "Please make a subclass with logic and additional interfaces as needed, e.g class LoginView extends LoginDesign implements View { }");
        javaClass.addMethod().setConstructor(true).setPublic()
                .setBody("Design.read(this);");

        // @PropertyId("customer.firstName")
        //
        System.out.println(javaClass);

    }

    private static String tagToClass(String tag) {
        if (tag.startsWith("vaadin-")) {
            String dashClassName = tag.substring("vaadin-".length());
            String className = SharedUtil.capitalize(
                    SharedUtil.dashSeparatedToCamelCase(dashClassName));

            return "com.vaadin.ui." + className;
        }
        return null;
        // throw new UnsupportedOperationException(
        // "Package mapping or v- not implemented");
    }
}
